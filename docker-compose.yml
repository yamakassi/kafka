services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper-test
    ports:
      - 2181:2181
    networks:
      - spark_kafka
  kafka:
    image: wurstmeister/kafka
    container_name: kafka-test
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-test
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-test:2181
    depends_on:
      - zookeeper
    volumes:
      - ./data/kafka:/var/run/docker.sock
    networks:
      - spark_kafka
  consumer:
    image: "myapp"
    build: ./KafkaConsumer
    container_name: consumer
    depends_on:
      - db
      - kafka
    ports:
      - "8081:8081"
    env_file:
      - .env
    environment:
      - BOOTSTRAP_SERVERS_CONFIG=${BOOTSTRAP_SERVERS_CONFIG}
      - MOVIE_TOPIC=${MOVIE_TOPIC}
      - REVIEW_TOPIC=${REVIEW_TOPIC}
      - UPVOTE_TOPIC=${UPVOTE_TOPIC}
      - URL_DB=${URL_DB}
      - USERNAME_DB=${USERNAME_DB}
      - PASSWORD_DB=${PASSWORD_DB}
    networks:
      - spark_kafka


  producer:
    image: "myapp2"
    build: ./KafkaProducer
    container_name: producer
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - BOOTSTRAP_SERVERS_CONFIG=${BOOTSTRAP_SERVERS_CONFIG}
      - MOVIE_TOPIC=${MOVIE_TOPIC}
      - REVIEW_TOPIC=${REVIEW_TOPIC}
      - UPVOTE_TOPIC=${UPVOTE_TOPIC}
      - CONSUMER_ADR=${CONSUMER_ADR}
    networks:
      - spark_kafka


  db:
    image: 'postgres:13.1-alpine'

    container_name: db
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${USERNAME_DB}
      - POSTGRES_PASSWORD=${PASSWORD_DB}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    networks:
      - spark_kafka
  redis:
    image: "redis:7.2"
    container_name: redis-test
    ports:
      - "6379:6379"
    networks:
      - spark_kafka
networks:
  spark_kafka:
      driver: bridge
      name: spark_kafka